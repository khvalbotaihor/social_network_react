{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/MyPost.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/MyPosts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","console","log","value","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","aboutMe","fullName","lookingForAJob","toString","lookingForAJobDescription","to","target","href","Post","classes","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElement","posts","map","p","index","postsBlock","AddNewPostFormRedux","onSubmit","addPost","NewPostText","reduxForm","form","handleSubmit","Field","placeholder","name","component","TextArea","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f80ba91a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__riNZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__282pM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__2KQQn\",\"postsBlock\":\"MyPosts_postsBlock__kHRAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__12n6o\"};","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps,prevState ) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n\r\n        let a = this.state;\r\n        let b = this.props;\r\n\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n            <div>\r\n                {this.state.editMode\r\n                    ? <div>\r\n                        <input autoFocus={true}\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}\r\n                               onChange={this.onStatusChange}\r\n                        ></input>\r\n                    </div>\r\n                    : <div>'\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    console.log(\"render\")\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <div>\r\n                    <input\r\n                        value={status}\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        onChange={onStatusChange}\r\n                    ></input>\r\n                </div>\r\n                : <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../components/Common/Preloader/preloader\"\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div >\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n                <hr/>\r\n                <div>About me: {profile.aboutMe}</div>\r\n                <div>Fullname: {profile.fullName}</div>\r\n                <div>Looking for a job : {profile.lookingForAJob.toString()}</div>\r\n                <div>Job secription: {profile.lookingForAJobDescription}</div>\r\n                <div> <a to=\"facebook.com\" target=\"_blank\">Facebook</a></div>\r\n                <div> <a href=\"github.com\" target=\"_blank\">github</a></div>\r\n                <div><a href=\"instagra.com/sds\" target=\"_blank\">instagram</a></div>\r\n                <div> <a href=\"\" target=\"_blank\">mainLink</a></div>\r\n                <div> <a href=\"https://twitter.com/@sdf\" target=\"_blank\">twitter</a></div>\r\n                <div> <a href=\"vk.com/dimych\" target=\"_blank\">vk</a></div>\r\n                <div> <a href=\"\" target=\"_blank\">website</a></div>\r\n                <div> <a href=\"\" target=\"_blank\">youtube</a></div>\r\n                <hr/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from \"./MyPost.module.css\";\r\n\r\nexport const Post = (props) => {\r\n    return (<div>\r\n            <div className={classes.item}>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRbJjaUVrc9az_B1Rqphs0EULawVrCg_mBMIg&usqp=CAU\"/>\r\n                {props.message}\r\n                <div><span>like {props.likesCount}</span></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport\r\ndefault Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/MyPosts\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nexport const MyPosts = React.memo (props => {\r\n    console.log(\"RENDER YO\")\r\n\r\n    let postsElement =\r\n        props.posts.map((p, index) => <Post message={p.message} likesCount={p.likesCount} key={index}/>)\r\n\r\n    let onAddPost = (value) => {\r\n        debugger;\r\n        props.addPost(value.NewPostText);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\r\n            <div className={classes.item}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                    <Field\r\n                        placeholder=\"Add new post\"\r\n                        name=\"NewPostText\"\r\n                        component={TextArea}\r\n                        validate={[required, maxLength10]}\r\n\r\n                    />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"addNewPost\"})(AddNewPostForm)\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: (NewPostText) =>{\r\n            dispatch(addPostActionCreator(NewPostText))\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nexport const Profile = (props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        console.log(userId)\r\n        this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // WithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}